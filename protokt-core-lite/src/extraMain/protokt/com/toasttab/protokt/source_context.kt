// Generated by protokt version 0.6.1-SNAPSHOT. Do not modify.
// Source: google/protobuf/source_context.proto
package com.toasttab.protokt

import com.toasttab.protokt.rt.AbstractKtDeserializer
import com.toasttab.protokt.rt.AbstractKtMessage
import com.toasttab.protokt.rt.KtGeneratedMessage
import com.toasttab.protokt.rt.KtMessageDeserializer
import com.toasttab.protokt.rt.KtMessageSerializer
import com.toasttab.protokt.rt.Tag
import com.toasttab.protokt.rt.UnknownFieldSet
import com.toasttab.protokt.rt.sizeof
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

/**
 * `SourceContext` represents information about the source of a protobuf element, like the file in
 * which it is defined.
 */
@KtGeneratedMessage("google.protobuf.SourceContext")
class SourceContext private constructor(
    /**
     * The path-qualified name of the .proto file that contained the associated protobuf element. 
     * For example: `"google/protobuf/source_context.proto"`.
     */
    val fileName: String,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty()
) : AbstractKtMessage() {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (fileName.isNotEmpty()) {
            result += sizeof(Tag(1)) + sizeof(fileName) 
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (fileName.isNotEmpty()) {
            serializer.write(Tag(10)).write(fileName)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is SourceContext &&
        other.fileName == fileName &&
        other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + fileName.hashCode()
        return result
    }

    override fun toString(): String = "SourceContext(" +
        "fileName=$fileName, " +
        "unknownFields=$unknownFields)"

    fun copy(dsl: SourceContextDsl.() -> Unit): SourceContext = SourceContext {
        fileName = this@SourceContext.fileName
        unknownFields = this@SourceContext.unknownFields
        dsl()
    }

    class SourceContextDsl {
        var fileName: String = ""

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): SourceContext = SourceContext(fileName,
         unknownFields)
    }

    companion object Deserializer : AbstractKtDeserializer<SourceContext>() {
        override fun deserialize(deserializer: KtMessageDeserializer): SourceContext {
            var fileName = ""
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return SourceContext(fileName,
                            UnknownFieldSet.from(unknownFields))
                    10 -> fileName = deserializer.readString()
                    else -> unknownFields = (unknownFields ?:
                            UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }
    }
}

fun SourceContext(dsl: SourceContext.SourceContextDsl.() -> Unit): SourceContext =
        SourceContext.SourceContextDsl().apply(dsl).build()
